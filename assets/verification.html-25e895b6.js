import{_ as t,p as a,q as e,a1 as n}from"./framework-5866ffd3.js";const s={},i=n(`<h1 id="verification" tabindex="-1"><a class="header-anchor" href="#verification" aria-hidden="true">#</a> verification</h1><div class="custom-container tip"><p class="custom-container-title">提示</p><p>通过请求向目标邮箱发送六位验证码，并存入缓存。<br> 这样才能进行后续需要验证码的操作比如注册，一个邮箱只能同时缓存一个验证码，验证码每隔60S才能发送一次。<br></p></div><h2 id="特殊返回码" tabindex="-1"><a class="header-anchor" href="#特殊返回码" aria-hidden="true">#</a> 特殊返回码</h2><p>无</p><h2 id="参数" tabindex="-1"><a class="header-anchor" href="#参数" aria-hidden="true">#</a> 参数</h2><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">类型</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">type</td><td style="text-align:left;">String</td><td style="text-align:left;">请求类型</td></tr><tr><td style="text-align:left;">email</td><td style="text-align:left;">String</td><td style="text-align:left;">用户的邮箱</td></tr><tr><td style="text-align:left;">key</td><td style="text-align:left;">String</td><td style="text-align:left;">本次验证码用途，可填参数见具体请求需求</td></tr></tbody></table><h2 id="示例" tabindex="-1"><a class="header-anchor" href="#示例" aria-hidden="true">#</a> 示例</h2><h3 id="请求" tabindex="-1"><a class="header-anchor" href="#请求" aria-hidden="true">#</a> 请求</h3><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;verification&quot;</span><span class="token punctuation">,</span> #请求类型
  <span class="token property">&quot;email&quot;</span><span class="token operator">:</span> <span class="token string">&quot;xxx&quot;</span><span class="token punctuation">,</span> #用户的邮箱
  <span class="token property">&quot;key&quot;</span><span class="token operator">:</span> <span class="token string">&quot;xxx&quot;</span> #本次验证码用途，可填参数见具体请求需求
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="响应" tabindex="-1"><a class="header-anchor" href="#响应" aria-hidden="true">#</a> 响应</h3><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;status&quot;</span><span class="token operator">:</span> <span class="token string">&quot;200&quot;</span><span class="token punctuation">,</span> #返回码
  <span class="token property">&quot;time&quot;</span><span class="token operator">:</span> <span class="token string">&quot;123&quot;</span> #响应时间
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11),l=[i];function o(r,d){return a(),e("div",null,l)}const p=t(s,[["render",o],["__file","verification.html.vue"]]);export{p as default};
